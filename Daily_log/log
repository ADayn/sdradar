Work Log


--June 7, 2018--
Achievements:
-Creating proper I.Q. data for desired waveform
-Realtime graphing of radio RX
-Determined max computational ability using Python Soapy + NumPy

Lessons:
-Bottleneck for Python is computation of buffer at runtime
-Nyquist is at sample rate for complex samples is f_s instead of f_s/2

Todo:
-Try precomputing buffer
-Try computing at runtime in C
-Figure out issues with sdradar02
-Find fastest C library for complex manipulation
-Send / receive chirp
-Determine pulse waveforms



--June 6, 2018--
Achievements:
-Visualize IQ data with gnuRadio
-We can TX pulses and sine wave
-We RX those pulses and waves and visualize them with gnuRadio to confirm

Lessons:
Switch computers to solve:
Bladerf_get_timestamp ERROR -5 File/device I/o error

-RADAR (better lower case radar)
order of thing: sample, correlate, decimate, fft
pulses are best with 7bit barker
range-doppler-map is the same as CAF (cross ambiguity function)
In Foundations of Radar Signal Processing section 3.1.3 has all the functions!

Sample-rate is the width of the channel that the sdr samples

Todo:
-Record samples before TX to compare to RX.
-Fix siggen.py by looking through Dan's code.
-Take measurements for Soapy now that it's working.
-Do RX and TX in libBladeRF.
-Look at c code for Soapy.
